apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    kube-score/ignore: container-image-pull-policy, pod-probes, container-security-context-user-group-id
  labels:
    service: postgres
  name: postgres
spec:
  replicas: 1
  serviceName: postgres
  selector:
    matchLabels:
      service: postgres
  template:
    metadata:
      annotations:
      labels:
        service: postgres
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
      containers:
        - env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  key: database
                  name: postgres-secret
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: postgres-secret
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: postgres-secret
          image: {{ .Values.images.postgres }}
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
            initialDelaySeconds: 10
          readinessProbe:
            tcpSocket:
              port: 5432
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: postgres
          resources:
            limits:
              cpu: "4"
              memory: 512Mi
              ephemeral-storage: 1Gi
            requests:
              cpu: "0.2"
              memory: 128Mi
              ephemeral-storage: 1Gi
          volumeMounts:
            - mountPath: /var/lib/postgresql
              name: postgres-data
            - mountPath: /var/run/postgresql
              name: temp
            - mountPath: /tmp
              name: temp
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
      initContainers:
        - image: {{ .Values.images.postgres }}
          name: postgres-createdir
          resources:
            limits:
              cpu: "1"
              memory: 512Mi
              ephemeral-storage: 1Gi
            requests:
              cpu: "0.2"
              memory: 128Mi
              ephemeral-storage: 1Gi
          volumeMounts:
            - mountPath: /postgres-data
              name: postgres-data
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          command:
            - /bin/bash
            - -c
            - >
              set -x;
              mkdir -p /postgres-data/data; 
              chown -R 999:999 /postgres-data/data;
              ls -l /postgres-data
      restartPolicy: Always
      volumes:
        - name: temp
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            # NOTE: This is a pretty wild guess
            storage: 1Gi
